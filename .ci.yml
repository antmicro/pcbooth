stages:
  - code-checks
  - test
  - build
  - deploy

type-correctness:
  stage: code-checks
  image: 'debian:bookworm'
  allow_failure: true
  script:
    - apt update && apt -qqy install pip python3-poetry python3.11
    - poetry add mypy fake-bpy-module-4.1==20240604
    - poetry install
    - poetry run mypy --install-types --non-interactive --disallow-untyped-defs src/

code-formatting:
  stage: code-checks
  image: 'debian:bookworm'
  allow_failure: true
  script:
    - apt update && apt -qqy install pip python3-poetry python3.11
    - poetry add black
    - poetry install
    - poetry run black --check src/

.install_pcbooth: &install_pcbooth |-
    export PATH=$HOME/.local/bin:$PATH
    mkdir -p logs
    apt-get -qqy update >> logs/debian_install.log
    apt-get -qqy update --fix-missing >> logs/debian_install.log
    apt update && apt-get -qqy install git pip python3.11 python3-poetry python3.11-venv pipx libsm6 ffmpeg >> logs/debian_install.log
    python3.11 -m pipx install .

.get_config: &get_config |-
    pcbooth -u
    echo >> blendcfg.yaml; cat sample/tests.yaml >> blendcfg.yaml

.test: &test
  image: 'debian:bookworm'
  stage: test
  only:
    refs:
      - merge_requests
      - main
  before_script:
    - *install_pcbooth
  script:
    - true
  artifacts:
    paths:
      - renders/
      - animations/

static-test:
  <<: *test
  script:
    - export PATH=$HOME/.local/bin:$PATH
    - *get_config
    - pcbooth -b sample/*.blend -c static_test

highlights-test:
  <<: *test
  script:
    - export PATH=$HOME/.local/bin:$PATH
    - *get_config
    - pcbooth -b sample/*.blend -c highlights_test

masks-test:
  <<: *test
  script:
    - export PATH=$HOME/.local/bin:$PATH
    - *get_config
    - pcbooth -b sample/*.blend -c masks_test

flip-transition-test:
  <<: *test
  script:
    - export PATH=$HOME/.local/bin:$PATH
    - *get_config
    - pcbooth -b sample/*.blend -c flip_transition_test

camera-transition-test:
  <<: *test
  script:
    - export PATH=$HOME/.local/bin:$PATH
    - *get_config
    - pcbooth -b sample/*.blend -c camera_transition_test

stackup-test:
  <<: *test
  script:
    - export PATH=$HOME/.local/bin:$PATH
    - *get_config
    - pcbooth -b sample/*.blend -c stackup_test

docs-build:
  image: debian:trixie
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  before_script:
    - apt-get update
    - apt-get install python3-venv python3-pip python3 -y
    - cd documentation/
    - python3 -m venv .venv/
    - source .venv/bin/activate
    - pip3 install -r requirements.txt
  script:
    - cd documentation/
    - source .venv/bin/activate
    - make html
    - tar cf $CI_DOCS_ARCHIVE -C build/html/ .
    - mv build/ ../.
    - mv $CI_DOCS_ARCHIVE ../.
  artifacts:
    paths:
      - build
      - $CI_DOCS_ARCHIVE

docs-deploy:
  image: debian:trixie
  variables:
    GIT_STRATEGY: none
  dependencies:
    - docs-build
  stage: deploy
  tags: ['docs']
  script: echo 'Deploying docs'
  artifacts:
    paths:
      - $CI_DOCS_ARCHIVE

